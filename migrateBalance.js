const mongoose = require('mongoose');
const dotenv = require('dotenv');
const User = require('./models/User');

dotenv.config();

const MONGODB_URI = process.env.MONGODB_URI;
const DB_NAME = process.env.DB_NAME || 'vsepoluchitsa_db';

console.log('üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–æ–≤: balance ‚Üí demoBalance + realBalance\n');

mongoose.connect(MONGODB_URI, {
  dbName: DB_NAME
}).then(async () => {
  console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞\n');
  
  try {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await User.find();
    
    if (users.length === 0) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      process.exit(1);
    }
    
    console.log(`üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}\n`);
    
    for (const user of users) {
      console.log(`üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${user.email}`);
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ balance
      if (user.balance !== undefined) {
        console.log(`   –°—Ç–∞—Ä—ã–π balance: $${user.balance.toFixed(2)}`);
        
        // –ï—Å–ª–∏ –Ω–æ–≤—ã–µ –ø–æ–ª—è –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if (user.demoBalance === undefined) {
          user.demoBalance = 10000; // –î–µ–º–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }
        if (user.realBalance === undefined) {
          user.realBalance = 0; // –†–µ–∞–ª—å–Ω—ã–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ (MongoDB –ø–æ–∑–≤–æ–ª—è–µ—Ç)
        user.balance = undefined;
        
        await user.save();
        
        console.log(`   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ:`);
        console.log(`      –î–µ–º–æ –±–∞–ª–∞–Ω—Å: $${user.demoBalance.toFixed(2)}`);
        console.log(`      –†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: $${user.realBalance.toFixed(2)}\n`);
      } else {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω
        console.log(`   ‚ÑπÔ∏è  –£–∂–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω:`);
        console.log(`      –î–µ–º–æ –±–∞–ª–∞–Ω—Å: $${user.demoBalance.toFixed(2)}`);
        console.log(`      –†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: $${user.realBalance.toFixed(2)}\n`);
      }
    }
    
    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await mongoose.connection.close();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
    process.exit(0);
  }
  
}).catch(err => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err.message);
  process.exit(1);
});

