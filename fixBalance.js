const mongoose = require('mongoose');
const dotenv = require('dotenv');

dotenv.config();

const MONGODB_URI = process.env.MONGODB_URI;
const DB_NAME = process.env.DB_NAME || 'vsepoluchitsa_db';

console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–ª–∞–Ω—Å–∞\n');

mongoose.connect(MONGODB_URI, {
  dbName: DB_NAME
}).then(async () => {
  console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞\n');
  
  try {
    const db = mongoose.connection.db;
    const usersCollection = db.collection('users');
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await usersCollection.find().toArray();
    
    if (users.length === 0) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      process.exit(1);
    }
    
    console.log(`üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}\n`);
    
    for (const user of users) {
      console.log(`üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${user.email}`);
      console.log(`   ID: ${user._id}`);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
      const updateResult = await usersCollection.updateOne(
        { _id: user._id },
        {
          $set: {
            demoBalance: 10000,  // –î–µ–º–æ —Å—á–µ—Ç
            realBalance: 0       // –†–µ–∞–ª—å–Ω—ã–π —Å—á–µ—Ç
          },
          $unset: {
            balance: ""  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ
          }
        }
      );
      
      console.log(`   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${updateResult.modifiedCount} –¥–æ–∫—É–º–µ–Ω—Ç(–æ–≤)`);
      console.log(`   –î–µ–º–æ –±–∞–ª–∞–Ω—Å: $10,000.00`);
      console.log(`   –†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: $0.00\n`);
    }
    
    console.log('üéâ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:\n');
    const updatedUsers = await usersCollection.find().toArray();
    
    for (const user of updatedUsers) {
      console.log(`üë§ ${user.email}:`);
      console.log(`   demoBalance: $${(user.demoBalance || 0).toFixed(2)}`);
      console.log(`   realBalance: $${(user.realBalance || 0).toFixed(2)}`);
      console.log(`   balance (—Å—Ç–∞—Ä–æ–µ): ${user.balance !== undefined ? '$' + user.balance.toFixed(2) : '—É–¥–∞–ª–µ–Ω–æ ‚úÖ'}\n`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await mongoose.connection.close();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
    process.exit(0);
  }
  
}).catch(err => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err.message);
  process.exit(1);
});

