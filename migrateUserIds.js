const mongoose = require('mongoose');
const dotenv = require('dotenv');

dotenv.config();

const MONGODB_URI = process.env.MONGODB_URI;
const DB_NAME = process.env.DB_NAME || 'vsepoluchitsa_db';

console.log('üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è: –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ userId —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n');

mongoose.connect(MONGODB_URI, {
  dbName: DB_NAME
}).then(async () => {
  console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞\n');
  
  try {
    const db = mongoose.connection.db;
    const usersCollection = db.collection('users');
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ userId
    const usersWithoutUserId = await usersCollection.find({ userId: { $exists: false } }).toArray();
    
    if (usersWithoutUserId.length === 0) {
      console.log('‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ –∏–º–µ—é—Ç userId!\n');
      process.exit(0);
    }
    
    console.log(`üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ userId: ${usersWithoutUserId.length}\n`);
    
    // –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π userId
    const userWithMaxId = await usersCollection.findOne({ userId: { $exists: true } }, { sort: { userId: -1 } });
    let nextUserId = userWithMaxId && userWithMaxId.userId ? userWithMaxId.userId + 1 : 1000000;
    
    console.log(`üî¢ –ù–∞—á–∞–ª—å–Ω—ã–π userId: ${nextUserId}\n`);
    
    // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º userId –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    for (const user of usersWithoutUserId) {
      await usersCollection.updateOne(
        { _id: user._id },
        { $set: { userId: nextUserId } }
      );
      
      console.log(`‚úÖ ${user.email} ‚Üí userId: ${nextUserId}`);
      nextUserId++;
    }
    
    console.log(`\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü—Ä–∏—Å–≤–æ–µ–Ω–æ ${usersWithoutUserId.length} userId\n`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await mongoose.connection.close();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
    process.exit(0);
  }
  
}).catch(err => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err.message);
  process.exit(1);
});

